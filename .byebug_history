c
mail&.text_part&.body
mail
mail.text_part
mail.text_part.body
e
c
mail.message_id
begin
          self.emails.create(subject: mail.subject, body: mail.text_part.body || "")  unless self.emails.find_by(email_id: mail.message_id).present?
        rescue => e
          byebug
        end
mail.text_part.body
self.emails.find_by(email_id: mail.message_id).present?
mail.message_id
mail = Mail.read_from_string msg
msg = @connection.fetch(message_id,'RFC822')[0].attr['RFC822']
e
c
@connection.search(["Message-ID"])
@connection.search(["HEADER", "Message-ID"])
@connection.search(["HEADER", "Message-ID", search_message_id])
imap.search(["HEADER", "Message-ID", search_message_id])
mail.message_id
 mail = Mail.read_from_string msg
msg = @connection.fetch(message_id,'RFC822')[0].attr['RFC822']
c
mail.message_id
 mail = Mail.read_from_string msg
c
mail.message_id
mail.message
mail.subject
mail.id
 mail = Mail.read_from_string msg
msg = @connection.fetch(message_id,'RFC822')[0].attr['RFC822']
message_id
c
ids
c
EmailAccount.imap_servers[imap_server.to_sym]
c
EmailAccount.imap_servers[imap_server.to_sym]
self.imap_server
self.imap_servers
c
self.imap_servers
self.imap_server
self
 @email_account = EmailAccount.new(account_params)
@email_account
account_params
def account_params
    {
      email: params[:email_account][:email],
      password: params[:email_account][:password],
      imap_server: EmailAccount.imap_servers[params[:email_account][:imap_server].to_sym],
      imap_port: 993,
      use_ssl: true
    }
  end
EmailAccount.imap_servers[params[:email_account][:imap_server].to_sym]
@email_account.imap_server
c
self
imap_server
c
EmailAccount.imap_servers[params[:email_account][:imap_server].to_sym]
@email_account.imap_server = EmailAccount.imap_servers[:gmail]
@email_account.imap_server = EmailAccount.imap_server[:gmail]
@email_account.imap_server = @email_account.imap_server[:gmail]
@email_account.imap_server = @email_account.imap_servers[:gmail]
@email_account.imap_server = @email_account.imap_servers[params[:email_account][:imap_server].to_sym]
@email_account.imap_server = @email_account.imap_servers[params[:email_account][:imap_server]]
@email_account.imap_server = @email_account.imap_server[params[:email_account][:imap_server]]
@email_account.imap_server = @email_account.imap_server[params[:email_account][:imap_server].to_sym]
EmailAccount.imap_servers[:gmail]
EmailAccount.imap_servers.keys.last["icloud"].value
EmailAccount.imap_servers.keys.last["icloud"]
EmailAccount.imap_servers.keys.last["gmail"]
EmailAccount.imap_servers.keys.last.value
EmailAccount.imap_servers.keys.last
EmailAccount.imap_servers.values
EmailAccount.imap_servers.value
EmailAccount.imap_servers.keys
imap_server
@email_account.imap_server = params[:email_account][:imap_server].to_sym
@email_account.imap_server = params[:email_account][:imap_server]
@email_account.imap_server = params[:email_account][:imap_server].to_sym
@email_account.imap_server = params[:email_account][:imap_server]
@email_account.imap_server = params[:email_account][:imap_server].to_sym
@email_account
account_params
c
account_params
def account_params
    {
      email: params[:email_account][:email],
      password: params[:email_account][:password],
      imap_server:  params[:email_account][:imap_server].to_sym ,
      imap_port: 993,
      use_ssl: true
    }
  end
params[:email_account][:imap_server].to_sym
 @email_account
c
EmailAccount.imap_servers.keys.select{|i| i.value if i== imap_server}
EmailAccount.imap_servers.keys.select{|i| return i.value if i== imap_server}
EmailAccount.imap_servers.keys.select{|i| i== imap_server}
imap_server
EmailAccount.imap_servers.values.select{|i| i== imap_server}
EmailAccount.imap_servers.values
EmailAccount.imap_servers.keys
self.imap_servers
imap_server
imap_server.to_sym
c
imap_server.to_sym
imap_servers.to_sym
imap_server.to_sym
imap_server
self
imap_server
c
account_params
params[:email_account][:imap_server].to_sym
params[:email_account][:imap_server]
@email_account
c
imap_server
c
imap_server[:gmail]
imap_server[:gmail
imap_server["gmail"]
self.imap_server
self.imap_servers
self.imap_server
self
imap_server
imap_servers
imap_server
c
@email_account
c
imap_server
imap_servers
c
imap_servers
imap_server
c
@email_account
c
imap_server
imap_servers
c
@email_account
account_params
c
imap_servers
imap_server
imap_servers
c
imap_servers
imap_server
enum imap_server: {
    gmail: 'imap.gmail.com',
    hotmail: 'imap-mail.outlook.com',
    icloud: 'imap.mail.me.com'
  }
imap_servers
imap_server
c
params[:email_account][:imap_server]
@email_account
n
params
c
params
imap_server
c
imap_server
c
self.imap_server
self
imap_server
c
imap_server
c
imap_server
c
imap_server
c
params
c
params[:email][:to]
c
@email_account.send_email(params[:email][:to], params[:email][:subject], params[:email][:body])
email_account.send_email(params[:email][:to], params[:email][:subject], params[:email][:body])
c
params[:email][:to]
params
c
body
subject
from
to
c
params
c
cc
c
params
c
body
subject
to
c
@connection.send_message(to, subject, body)
self.connect
c
@connection.search('ALL')
connection.search('ALL')
c
emails << self.emails.create(subject: mail.subject, body: mail.html_part.body)
mail = Mail.read_from_string msg
msg = @connection.fetch(1,'RFC822')[0].attr['RFC822']
self.emails.find_by(id: 1).nil?
@connection.search('ALL') do |message_id| puts message_id end
@connection.search('ALL') do |message_id| 
@connection.search('ALL')
c
emails << self.emails.create(subject: mail.subject, body: mail.html_part.body)
emails << self.emails.create(id: 1, subject: mail.subject, body: mail.html_part.body)
mail = Mail.read_from_string msg
msg = @connection.fetch(1,'RFC822')[0].attr['RFC822']
msg = @connection.fetch(message_id,'RFC822')[0].attr['RFC822']
self.emails
@connection.search('ALL')
emails
c
session["current_user"]["email"]
c
self.emails.last
self.emails.lsst
self.emails
self
mail.html_part.body
mail.subject
mail = Mail.read_from_string msg
msg = @connection.fetch(1,'RFC822')[0].attr['RFC822']
msg = imap.fetch(1,'RFC822')[0].attr['RFC822']
@connection.search('ALL')
@connection
c
